{"version":3,"sources":["Components/NavBar.tsx","CustomHooks/useMediaQuery.tsx","Images/profile.jpg","Images/egypt.jpg","Components/Header.tsx","Components/Profile.tsx","Components/Languages.tsx","Components/Projects.tsx","App.tsx","index.tsx"],"names":["NavBar","props","useState","menuState","setMenuState","openState","setOpenState","switchMenu","title","isMobile","query","matches","setMatches","useEffect","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","menu","push","href","onClick","src","alt","sections","map","elem","className","undefined","socials","target","rel","icon","linkedinFill","githubIcon","Header","Profile","Egypt","Languages","name","percentage","style","width","Projects","justifyContent","navSections","App","id","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e98e765.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './NavBar.css';\r\nimport { Icon } from '@iconify/react';\r\nimport githubIcon from '@iconify-icons/logos/github-icon';\r\nimport linkedinFill from '@iconify-icons/akar-icons/linkedin-fill';\r\nimport { useMediaQuery } from '../CustomHooks/useMediaQuery';\r\n\r\nfunction NavBar(props: { sections: Array<string> }) {\r\n  const [menuState, setMenuState] = useState(\"\");\r\n  const [openState, setOpenState] = useState(false);\r\n\r\n  const switchMenu = (title: string) => {\r\n    setMenuState(title);\r\n    setOpenState(false);\r\n  }\r\n  const toggleOpen = () => setOpenState(!openState);\r\n\r\n  let isMobile = useMediaQuery('(max-width: 500px)');\r\n  useEffect(() => {\r\n    if (!isMobile) setOpenState(false);\r\n  }, [isMobile]);\r\n\r\n  let menu = [];\r\n\r\n  if (isMobile) {\r\n    menu.push(<a href=\"#0\" onClick={toggleOpen} key=\"menu\">\r\n      <img src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\" alt=\"Menu\"/>\r\n    </a>);\r\n    if (openState) {\r\n      menu.push(props.sections.map((elem) => {\r\n        return <a \r\n          className={menuState === elem ? \"active\" : undefined} \r\n          href={\"#\" + elem} \r\n          onClick={() => switchMenu(elem)} \r\n          key={elem}>\r\n          {elem}\r\n        </a>;\r\n      }));\r\n    }\r\n  }\r\n  else {\r\n    menu = props.sections.map((elem) => {\r\n      return <a \r\n        className={menuState === elem ? \"active\" : undefined} \r\n        href={\"#\" + elem} \r\n        onClick={() => switchMenu(elem)} \r\n        key={elem}>\r\n          {elem}\r\n      </a>;\r\n    });\r\n  }\r\n\r\n  let socials = isMobile ? null :\r\n    <>\r\n      <a className=\"socials\" href=\"https://www.linkedin.com/in/peterysun/\" target=\"_blank\" rel=\"noreferrer\">\r\n        <Icon icon={linkedinFill} />\r\n      </a>\r\n      <a className=\"socials\" href=\"https://github.com/Narnian12\" target=\"_blank\" rel=\"noreferrer\">\r\n        <Icon icon={githubIcon} />\r\n      </a>\r\n    </>;\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      {menu}\r\n      {socials}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","// Using similar logic to custom hook found here\r\n// https://www.netlify.com/blog/2020/12/05/building-a-custom-react-media-query-hook-for-more-responsive-apps/\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport function useMediaQuery(query: string) {\r\n  const [matches, setMatches] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const media = window.matchMedia(query);\r\n    if (media.matches !== matches) {\r\n      setMatches(media.matches);\r\n    }\r\n    const listener = () => setMatches(media.matches);\r\n    media.addEventListener(\"change\", listener);\r\n    return () => media.removeEventListener(\"change\", listener);\r\n  }, [matches, query]);\r\n\r\n  return matches;\r\n}","export default __webpack_public_path__ + \"static/media/profile.df9b74bd.jpg\";","export default __webpack_public_path__ + \"static/media/egypt.e65cb444.jpg\";","import './Header.css';\r\nimport Profile from '../Images/profile.jpg';\r\nimport Egypt from '../Images/egypt.jpg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <h1>PS - My Portfolio!</h1>\r\n      <img src={Profile} alt=\"Profile\"></img>\r\n      <img src={Egypt} alt=\"Egypt\"></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import '../Styles/Card.css';\r\n\r\nfunction Profile() {\r\n  return (\r\n    <div className=\"card-layout\">\r\n      <div className=\"card\">\r\n        <h2>Introduction</h2>\r\n        <p className=\"card-text\">Hello! I'm Peter, an aspiring full-stack developer with experience in \r\n        QA, DevOps, and back-end technologies. My hope for this page is to gain a stronger\r\n        understanding of UI development with the React library, especially with Hooks and TypeScript.\r\n        </p>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h2>Work</h2>\r\n        <p className=\"card-text\">I am a software engineer in Promess, a manufacturing company specializing\r\n          in sensing systems. For a few years, I developed full-stack features in the .NET framework.\r\n          I am also heavily involved in the DevOps operations, using Microsoft Azure and CI/CD pipelines.\r\n        </p>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h2>Education</h2>\r\n        <p className=\"card-text\">I am pursuing a Master of Science in Computer Science at Oakland University.\r\n        I graduated with a Bachelor of Science in Microbiology from the University of Michigan.\r\n        </p>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h2>Research</h2>\r\n        <p className=\"card-text\">\r\n          I am working on analyzing <a href=\"https://en.wikipedia.org/wiki/Dependency_injection\" target=\"_blank\" rel=\"noreferrer\">Dependency Injection</a> (DI),\r\n          a framework that may help in developing more maintainable software. More specifically, I am currently expanding on\r\n          the CKJM metrics tool to detect the presence of DI in Java projects.\r\n        </p>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h2>Passions</h2>\r\n        <p className=\"card-text\">I enjoy writing. I love writing prose and poetry, and hope to publish a novel one day. I also like playing guitar and piano.\r\n          I am trying to learn a new piano song and would appreciate any suggestions! My musical interests primarily comprise of classical, Christian, and Japanese pop.\r\n        </p>\r\n      </div>\r\n      <div className=\"card\">\r\n        <h2>Current Tech Stack</h2>\r\n        <p className=\"card-text\">I am working and researching with Rust, React, GraphQL, Node.js, and Java.\r\n          Languages I hope to tackle soon include Go and Python, and I want to try Vue.js in the future as well.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import './Languages.css';\r\n\r\nfunction Languages() {\r\n  const languages =[\r\n    {\r\n      name: \"C++\",\r\n      percentage: \"85%\",\r\n    },\r\n    {\r\n      name: \"JavaScript\",\r\n      percentage: \"70%\",\r\n    },\r\n    {\r\n      name: \"React\",\r\n      percentage: \"60%\",\r\n    },\r\n    {\r\n      name: \"HTML\",\r\n      percentage: \"55%\",\r\n    },\r\n    {\r\n      name: \"CSS\",\r\n      percentage: \"50%\"\r\n    },\r\n    {\r\n      name: \"Rust\",\r\n      percentage: \"50%\",\r\n    },\r\n    {\r\n      name: \"C#\",\r\n      percentage: \"40%\",\r\n    },\r\n    {\r\n      name: \"R\",\r\n      percentage: \"35%\",\r\n    },\r\n    {\r\n      name: \"Java\",\r\n      percentage: \"30%\",\r\n    }\r\n  ]\r\n  return (\r\n    <>\r\n      {languages.map(elem => {\r\n        return (\r\n          <div className=\"languages\" key={elem.name}>\r\n            <div className=\"language-bar\">\r\n              <div className=\"fill\" style={{width: elem.percentage}}>\r\n                <div className=\"language-name\"><p>{elem.name}</p></div>\r\n              </div>\r\n              <div className=\"percentage\"><p>{elem.percentage}</p></div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Languages;","import '../Styles/Card.css';\r\nimport './Projects.css';\r\n\r\nfunction Projects() {\r\n  return (\r\n    <div className=\"card-layout\" style={{justifyContent: \"center\"}}>\r\n      <div className=\"card project\">\r\n        <h2><a href=\"https://github.com/Narnian12/ckjm_analyzer\" target=\"_blank\" rel=\"noreferrer\">ckjm_analyzer</a></h2>\r\n        <p className=\"card-text\">\r\n          Command-line application that detects Dependency Injection (DI) occurrences in Java class files,\r\n          using the <a href=\"http://gromit.iiar.pwr.wroc.pl/p_inf/ckjm/\" target=\"_blank\" rel=\"noreferrer\">CKJM-Extended</a> tool to measure metrics.\r\n        </p>\r\n        <p><b>Languages Used</b>: Rust</p>\r\n      </div>\r\n      <div className=\"card project\">\r\n        <h2><a href=\"https://narnian12.github.io/ps_calculator/\" target=\"_blank\" rel=\"noreferrer\">ps_calculator</a></h2>\r\n        <p className=\"card-text\">\r\n          Online calculator that executes simple math, tracks history, and supports keyboard use. Uses a significant amount of regex to generalize computational logic.\r\n        </p>\r\n        <p><b>Languages Used</b>: React, TypeScript, HTML, CSS</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projects;","import './App.css';\r\nimport NavBar from './Components/NavBar';\r\nimport Header from './Components/Header';\r\nimport Profile from './Components/Profile';\r\nimport Languages from './Components/Languages';\r\nimport Projects from './Components/Projects';\r\n\r\nconst navSections = [\"Profile\", \"Languages\", \"Projects\"];\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <NavBar sections={navSections}/>\r\n      <Header />\r\n      <h1 id=\"Profile\" className=\"headers\">Profile</h1>\r\n      <Profile />\r\n      <h1 id=\"Languages\" className=\"headers\">Languages</h1>\r\n      <p style={{margin: \"0px 40px\"}}>\r\n        Percentage bars are subjective. I am ranking them based on how often and comfortable I am using the language.\r\n      </p>\r\n      <Languages />\r\n      <h1 id=\"Projects\" className=\"headers\">Projects</h1>\r\n      <Projects />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}