{"version":3,"sources":["Components/NavBar.tsx","CustomHooks/useMediaQuery.tsx","Images/profile.jpg","Images/egypt.jpg","Components/Header.tsx","Styles/Card.ts","Components/Profile.tsx","Components/Languages.tsx","Components/Projects.tsx","App.tsx","index.tsx"],"names":["NavigationWrapper","styled","div","NavLink","a","props","menuState","elem","SocialLink","NavBar","sections","useState","setMenuState","openState","setOpenState","switchMenu","title","isMobile","query","matches","setMatches","useEffect","media","window","matchMedia","listener","addEventListener","removeEventListener","useMediaQuery","menu","push","href","onClick","src","alt","map","console","log","socials","target","rel","icon","mediumIcon","linkedinFill","githubIcon","Div","Img","img","H1","h1","Header","Profile","Egypt","Card","CardLayout","CardText","p","Languages","name","percentage","Wrapper","LanguageBar","Fill","LanguageName","Percentage","Projects","CardProjectLayout","CardProject","navSections","App","Headers","id","style","margin","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a06e91a0.chunk.js","sourcesContent":["import { useState, useEffect, FC } from 'react';\nimport { Icon } from '@iconify/react';\nimport mediumIcon from '@iconify-icons/logos/medium-icon';\nimport githubIcon from '@iconify-icons/logos/github-icon';\nimport linkedinFill from '@iconify-icons/akar-icons/linkedin-fill';\nimport { useMediaQuery } from '../CustomHooks/useMediaQuery';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst NavigationWrapper = styled.div`\n  background-color: #5586de;\n  overflow: hidden;\n  position: fixed;\n  width: 100%;\n  top: 0;\n`;\n\ntype NavLinkType = {\n  menuState: string;\n  elem: string;\n};\n\nconst NavLink = styled.a<NavLinkType>`\n  display: block;\n  float: left;\n  color: white;\n  padding: 14px 16px;\n  font-size: 15px;\n  text-decoration: none;\n  background-color: ${(props: NavLinkType) =>\n    props.menuState === props.elem ? 'gray' : '#5586DE'};\n  :hover {\n    background-color: lightgray;\n    color: midnightblue;\n  }\n  @media only screen and (max-width: 500px) {\n    float: none;\n    text-align: left;\n  }\n`;\n\nconst SocialLink = styled(NavLink)`\n  float: right;\n  @media only screen and (max-width: 500px) {\n    float: none;\n  }\n`;\n\ninterface NavBarProps {\n  sections: Array<string>;\n}\n\nconst NavBar: FC<NavBarProps> = ({ sections }) => {\n  const [menuState, setMenuState] = useState('');\n  const [openState, setOpenState] = useState(false);\n\n  const switchMenu = (title: string) => {\n    setMenuState(title);\n    setOpenState(false);\n  };\n  const toggleOpen = () => setOpenState(!openState);\n\n  const isMobile = useMediaQuery('(max-width: 500px)');\n  useEffect(() => {\n    if (!isMobile) setOpenState(false);\n  }, [isMobile]);\n\n  let menu = [];\n\n  if (isMobile) {\n    menu.push(\n      <NavLink menuState=\"\" elem=\" \" href=\"#0\" onClick={toggleOpen} key=\"menu\">\n        <img\n          src=\"https://img.icons8.com/material-outlined/24/000000/menu--v1.png\"\n          alt=\"Menu\"\n        />\n      </NavLink>\n    );\n    if (openState) {\n      menu.push(\n        sections.map((elem) => {\n          return (\n            <NavLink\n              menuState={menuState}\n              elem={elem}\n              href={'#' + elem}\n              onClick={() => switchMenu(elem)}\n              key={elem}\n            >\n              {elem}\n            </NavLink>\n          );\n        })\n      );\n    }\n  } else {\n    menu = sections.map((elem) => {\n      console.log(menuState, elem);\n      return (\n        <NavLink\n          menuState={menuState}\n          elem={elem}\n          href={'#' + elem}\n          onClick={() => switchMenu(elem)}\n          key={elem}\n        >\n          {elem}\n        </NavLink>\n      );\n    });\n  }\n\n  const socials = isMobile ? null : (\n    <>\n      <SocialLink\n        menuState=\"\"\n        elem=\" \"\n        href=\"https://medium.com/@pysun12\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Icon icon={mediumIcon} />\n      </SocialLink>\n      <SocialLink\n        menuState=\"\"\n        elem=\" \"\n        href=\"https://www.linkedin.com/in/peterysun/\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Icon icon={linkedinFill} />\n      </SocialLink>\n      <SocialLink\n        menuState=\"\"\n        elem=\" \"\n        href=\"https://github.com/Narnian12\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n      >\n        <Icon icon={githubIcon} />\n      </SocialLink>\n    </>\n  );\n\n  return (\n    <NavigationWrapper>\n      {menu}\n      {socials}\n    </NavigationWrapper>\n  );\n};\n\nexport default NavBar;\n\nNavBar.propTypes = {\n  sections: PropTypes.array.isRequired,\n};\n","// Using similar logic to custom hook found here\n// https://www.netlify.com/blog/2020/12/05/building-a-custom-react-media-query-hook-for-more-responsive-apps/\nimport { useState, useEffect } from 'react';\n\nexport function useMediaQuery(query: string): boolean {\n  const [matches, setMatches] = useState(false);\n\n  useEffect(() => {\n    const media = window.matchMedia(query);\n    if (media.matches !== matches) {\n      setMatches(media.matches);\n    }\n    const listener = () => setMatches(media.matches);\n    media.addEventListener('change', listener);\n    return () => media.removeEventListener('change', listener);\n  }, [matches, query]);\n\n  return matches;\n}\n","export default __webpack_public_path__ + \"static/media/profile.df9b74bd.jpg\";","export default __webpack_public_path__ + \"static/media/egypt.e65cb444.jpg\";","import Profile from '../Images/profile.jpg';\nimport Egypt from '../Images/egypt.jpg';\nimport styled from 'styled-components';\nimport { FC } from 'react';\n\nconst Div = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: center;\n  margin: 45px 0px 0px 0px;\n  background-color: #5585de;\n  background-image: linear-gradient(#5586de, white);\n`;\n\nconst Img = styled.img`\n  height: auto;\n  max-width: 300px;\n  margin: 5px;\n`;\n\nconst H1 = styled.h1`\n  width: 300px;\n`;\n\nconst Header: FC = () => {\n  return (\n    <Div>\n      <H1>PS - My Portfolio!</H1>\n      <Img src={Profile} alt=\"Profile\"></Img>\n      <Img src={Egypt} alt=\"Egypt\"></Img>\n    </Div>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n  box-shadow: 5px 5px 5px powderblue;\n  padding: 3px;\n  margin: 10px;\n  max-width: 400px;\n`;\n\nconst CardLayout = styled.div`\n  margin: 10px 0px;\n  width: 100%;\n  display: flex;\n  justify-content: space-around;\n  flex-wrap: wrap;\n`;\n\nconst CardText = styled.p`\n  min-width: 200px;\n  margin: 20px;\n  text-align: center;\n`;\n\nexport { Card, CardLayout, CardText };\n","import { FC } from 'react';\nimport { Card, CardLayout, CardText } from '../Styles/Card';\n\nconst Profile: FC = () => {\n  return (\n    <CardLayout>\n      <Card>\n        <h2>Introduction</h2>\n        <CardText>\n          Hello! I&aposm Peter, an aspiring full-stack developer with experience\n          in QA, DevOps, and back-end technologies. My hope for this page is to\n          gain a stronger understanding of UI development with the React\n          library, especially with Hooks and TypeScript.\n        </CardText>\n      </Card>\n      <Card>\n        <h2>Work</h2>\n        <CardText>\n          I am a software engineer in Promess, a manufacturing company\n          specializing in sensing systems. For a few years, I developed\n          full-stack features in the .NET framework. I am also heavily involved\n          in the DevOps operations, using Microsoft Azure and CI/CD pipelines.\n        </CardText>\n      </Card>\n      <Card>\n        <h2>Education</h2>\n        <CardText>\n          I am pursuing a Master of Science in Computer Science at Oakland\n          University. I graduated with a Bachelor of Science in Microbiology\n          from the University of Michigan.\n        </CardText>\n      </Card>\n      <Card>\n        <h2>Research</h2>\n        <CardText>\n          I am working on analyzing{' '}\n          <a\n            href=\"https://en.wikipedia.org/wiki/Dependency_injection\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Dependency Injection\n          </a>{' '}\n          (DI), a framework that may help in developing more maintainable\n          software. More specifically, I am currently expanding on the CKJM\n          metrics tool to detect the presence of DI in Java projects.\n        </CardText>\n      </Card>\n      <Card>\n        <h2>Passions</h2>\n        <CardText>\n          I enjoy writing. I love writing prose and poetry, and hope to publish\n          a novel one day. I also like playing guitar and piano. I am trying to\n          learn a new piano song and would appreciate any suggestions! My\n          musical interests primarily comprise of classical, Christian, and\n          Japanese pop.\n        </CardText>\n      </Card>\n      <Card>\n        <h2>Current Tech Stack</h2>\n        <CardText>\n          I am working and researching with Rust, React, GraphQL, Node.js, and\n          Java. Languages I hope to tackle soon include Go and Python, and I\n          want to try Vue.js in the future as well.\n        </CardText>\n      </Card>\n    </CardLayout>\n  );\n};\n\nexport default Profile;\n","import { FC } from 'react';\nimport styled from 'styled-components';\n\nconst Languages: FC = () => {\n  const languages = [\n    { name: 'C++', percentage: '85%' },\n    { name: 'JavaScript', percentage: '75%' },\n    { name: 'React', percentage: '60%' },\n    { name: 'HTML', percentage: '55%' },\n    { name: 'CSS', percentage: '50%' },\n    { name: 'Rust', percentage: '50%' },\n    { name: 'C#', percentage: '40%' },\n    { name: 'SQL', percentage: '40%' },\n  ];\n\n  return (\n    <>\n      {languages.map((elem) => {\n        return (\n          <Wrapper key={elem.name}>\n            <LanguageBar>\n              <Fill percentage={elem.percentage}>\n                <LanguageName>\n                  <p>{elem.name}</p>\n                </LanguageName>\n              </Fill>\n              <Percentage>\n                <p>{elem.percentage}</p>\n              </Percentage>\n            </LanguageBar>\n          </Wrapper>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Languages;\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nconst LanguageBar = styled.div`\n  margin: 5px 10px;\n  max-width: 600px;\n  width: 100%;\n`;\n\n// Generate type interface for style-components\ntype FillType = {\n  percentage: string;\n};\n\n// Cannot create styled-components in render functions\nconst Fill = styled.div<FillType>`\n  height: 100%;\n  background-color: powderblue;\n  float: left;\n  width: ${(props: FillType) => props.percentage};\n`;\n\nconst LanguageName = styled.div`\n  width: 100px;\n  float: left;\n  font-weight: bold;\n  background-color: cornflowerblue;\n`;\n\nconst Percentage = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 0px 10px 0px 0px;\n  background-color: lightgray;\n`;\n","import { Card, CardLayout, CardText } from '../Styles/Card';\nimport styled from 'styled-components';\nimport { FC } from 'react';\n\nconst Projects: FC = () => {\n  return (\n    <CardProjectLayout>\n      <CardProject>\n        <h2>\n          <a\n            href=\"https://github.com/Narnian12/ckjm-analyzer\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ckjm-analyzer\n          </a>\n        </h2>\n        <CardText>\n          CLI application that detects Dependency Injection (DI) occurrences in\n          Java class files, using the{' '}\n          <a\n            href=\"http://gromit.iiar.pwr.wroc.pl/p_inf/ckjm/\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            CKJM-Extended\n          </a>{' '}\n          tool to measure metrics.\n        </CardText>\n        <p>\n          <b>Languages/Libraries Used</b>: Rust\n        </p>\n      </CardProject>\n      <CardProject>\n        <h2>\n          <a\n            href=\"https://github.com/Narnian12/ps-calculator\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            ps-calculator\n          </a>\n        </h2>\n        <CardText>\n          Online calculator that executes simple math, tracks history, and\n          supports keyboard use. Uses regex to generalize computational logic.\n        </CardText>\n        <p>\n          <b>Languages/Libraries Used</b>: React, TypeScript, HTML, CSS\n        </p>\n      </CardProject>\n      <CardProject>\n        <h2>\n          <a\n            href=\"https://github.com/Narnian12/todo-app-client\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            todo-app-client\n          </a>\n        </h2>\n        <CardText>\n          Client-side application of todo app linked to a server deployed on\n          Heroku.\n        </CardText>\n        <p>\n          <b>Languages/Libraries Used</b>: React, TypeScript, GraphQL, Apollo\n          Client\n        </p>\n      </CardProject>\n      <CardProject>\n        <h2>\n          <a\n            href=\"https://github.com/Narnian12/todo-app-server-expanded\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            todo-app-server-expanded\n          </a>\n        </h2>\n        <CardText>\n          Server-side application of todo app deployed on Heroku. Uses a Prisma\n          ORM SQLite database to store data.\n        </CardText>\n        <p>\n          <b>Languages/Libraries Used</b>: Node.js, Apollo Server Express,\n          Prisma, GraphQL\n        </p>\n      </CardProject>\n    </CardProjectLayout>\n  );\n};\n\nexport default Projects;\n\nconst CardProjectLayout = styled(CardLayout)`\n  justify-content: center;\n`;\n\nconst CardProject = styled(Card)`\n  transition: transform 0.3s;\n  :hover {\n    -ms-transform: scale(1.1);\n    -webkit-transform: scale(1.1);\n    transform: scale(1.1);\n  }\n`;\n","import NavBar from './Components/NavBar';\nimport Header from './Components/Header';\nimport Profile from './Components/Profile';\nimport Languages from './Components/Languages';\nimport Projects from './Components/Projects';\nimport styled from 'styled-components';\nimport { FC } from 'react';\n\nconst navSections = ['Profile', 'Languages', 'Projects'];\n\nconst App: FC = () => {\n  return (\n    <Wrapper>\n      <NavBar sections={navSections} />\n      <Header />\n      <Headers id=\"Profile\">Profile</Headers>\n      <Profile />\n      <Headers id=\"Languages\">Languages</Headers>\n      <p style={{ margin: '0px 40px' }}>\n        Percentage bars are subjective. I am ranking them based on how often and\n        comfortable I am using the language.\n      </p>\n      <Languages />\n      <Headers id=\"Projects\">Projects</Headers>\n      <Projects />\n    </Wrapper>\n  );\n};\n\nexport default App;\n\nconst Wrapper = styled.div`\n  text-align: center;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst Headers = styled.h1`\n  width: 100%;\n  padding-top: 50px;\n  margin-top: -50px;\n  @media only screen and (max-width: 500px) {\n    padding-top: 70px;\n    margin-top: -70px;\n  }\n`;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n      monospace;\n  }\n\n  a {\n    text-decoration: none;\n  }\n`;\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}